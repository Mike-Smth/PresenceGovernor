/**
 * generated by Xtext
 */
package com.minres.rdl.formatting;

import com.google.inject.Inject;
import com.minres.rdl.services.RDLGrammarAccess;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.xbase.lib.Extension;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
@SuppressWarnings("all")
public class RDLFormatter extends AbstractDeclarativeFormatter {
  @Inject
  @Extension
  private RDLGrammarAccess _rDLGrammarAccess;
  
  @Override
  protected void configureFormatting(final FormattingConfig c) {
    c.setLinewrap(0, 1, 2).before(this._rDLGrammarAccess.getSL_COMMENTRule());
    c.setLinewrap(0, 1, 2).before(this._rDLGrammarAccess.getML_COMMENTRule());
    c.setLinewrap(0, 1, 1).after(this._rDLGrammarAccess.getML_COMMENTRule());
  }
}
